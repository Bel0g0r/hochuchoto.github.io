{"version":3,"sources":["panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js","panels/Cart/CartHome.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/ProfileUser/UserInfo.js","panels/catalog/CatalogProduct.js","panels/catalog/CategoryList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/PaymentsPage.js","panels/Cart/NewOrderServer.js","panels/SearchResultProductBlock.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","index.js","panels/global/index.js","img/persik.png","panels/catalog/ProductList.js","panels/Cart/FormNewAddress.js"],"names":["ButtonInCart","CartProducts","getInCarts","typeProduct","setCart","onClick","ButOk","id_CartPr","map","data","key","id_Product","type_product","counts","className","getCountButton","getButtonInCartProduct","typeProduct2","setCarts","escapeHtmlDecode","text","replace","OneProduct","product","idCategory","number_format","number","decimals","dec_point","separator","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","length","Array","join","productList","ClickProduct","setProductModal","ProductCat","idTypeProduct","id","ArrayMod","ListMod","Object","keys","VisualList","datas","src","mod_img","getModyficateBlock","modyficate","href","id_Category","e","preventDefault","alt","title","img","console","log","global","Metrika","Markers","active","ym","marker","Product_Weight","weight","Product_WeightType","weight_type","description","type_info","price_discount","style","fontWeight","fontSize","marginRight","old_price","new_price","price","getPriceProducts","getProductDiv","osName","platform","GetCartHome","props","state","activePanel","popout","LoadDopProduct","this","setState","LoadStatus","setPopout","a","PopupLoadDop","bind","PresetsDopProductList","list","ListPresets","count","typeCount","textAlign","overflow","float","width","marginLeft","paddingRight","DopProductList","ListDopProduct","getButtonDopProduct","setDopProduct","getCountDopProductIcon","DopProductUserSet","display","paddingBottom","height","minWidth","Prod","alls","idProduct","Buttons","margin","getCartVisual","Products","results","cartProduct","idProducts","marginBottom","clear","color","bottom","getButtonNavigation","typeNav","action","ButtonBlock","data-to","IOS","header","ProductList","icon","sumCart","GetPresetsVisual","theme","size","getOneStepCart","DopProductListVisual","userSystemInfo","userInfo","getUserSystemInfo","addressDefault","setAddressDefault","AffiliateDefault","setAffiliateDefault","checkedTypeDilivery","setTypeDilivery","commentary","setComment","countPerson","setStates","setDeliveryDataItogs","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfo","DataDeliveryInfoPay","stretched","level","SalePoints","getReloadInfODeliveryPay","setOkNewOrderView","React","Component","require","App","parseQueryString","string","slice","queryParam","kvp","value","reduce","query","AudioInfo","ReloadBasket","Audio","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","typePay","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","settingsFilterSearch","typeSearch","activeHashPageProduct","activeProductHash","activeCategoryHash","activefilter","onStoryChange","onChange","search","axios","method","url","ApiKey","responseType","then","ListCitySelect","catch","err","idUsers","CountNoticeNoCheck","result","type","idNotice","getNotice","getCartDB","as","bs","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","status","StatusReloadBasketData","JSON","stringify","ArraySlides","Bullets","AutoPlays","SliderVisual","maxWidth","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","setUser","getCityUser","MetrikaAction","fetchData","setInterval","getIntervalCart","setHashDataReload","setModalsPay","setModal","setModalsPayError","setOkNewOrderViewHandl","setFailNewOrderViewHandl","setFailNewOrderView","window","addEventListener","task","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","errorInfo","ListOld","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","push","countPlus","setcountCartProduct","noAdd","cartProducts","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","location","hash","newHeight","screen","send","setHashNew","setPageModalProductHash","ProductArray","def","defaultChecked","name","some","queryParams","modal","onClose","right","dynamicContentHeight","caption","actions","getFilterBlockModal","settlingHeight","background","osname","tabbar","selected","data-story","label","getSuccesOrderPage","getFailOrderPage","userData","setTypeOrderList","left","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","ProductsLists","sliderHeader","getSliderGalery","ClickOneFilter","ClickOneFilterDeleted","asideContent","after","arrayProduct","varSearch","noShadow","getDeliveryDataPriceItog","setTypeOrderDate","comments","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","UserOrderList","loadOrders","before","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","date","time","id_order","getOrderType","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","statusView","Data","setNoticeData","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","UserInfo","them","fetchedUser","photo_200","city","first_name","last_name","getInfoUserNoneAuth","point","checked","textDecoration","linkSocSeti","target","getPanelProfil","CatalogProduct","OPT","useEffect","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","searchProduct","getHashProductPageActive","DataKombo","AllProduct","res","ArrK","d","dp","ip","arrp","marginTop","multiline","FeaturesData","defs","getFeaturesData","Features","getWeightProduct","ModalProductInfo","Loadings","ClickBack","ProductInfo","position","komboPoduct","getKomboProductData","getFeaturesBlock","featuresProduct","GetCategorys","ClickCategory","ShowCategory","Title","onClickProduct","productsLists","filterCategorys","filterCategory","idCategorys","nameCategory","compareUnitaz","b","GetBrandPanels","NewSort","kk","sort","Categorys","imgCategory","backgroundPosition","phonenumberCollVisual","phonenumberColl","classNameDivCategory","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","getPhoneUserVK","layout","fill","phoneVerification","VerificationCode","idUserVK","event","types","values_count","top","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","podezd","etaj","kvartira","openDefault","getAddressFull","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","getBlocknoPreorder","PaymentsPage","value2","statusNewOrder","options","points","step","min","max","Number","setPointsDefaultsSale","String","justifyContent","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","DataOrderInfo","getDataOrder","getPageOkOrderSet","sumItog","showModalPayment","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","NewOrderServer","infoNewOrder","typePayment","getElementById","contentWindow","postMessage","idNewOrder","sumPaymentItog","idPointsPaymentToken","SearchResultProductBlock","clrStatus","getArrayCategoryProduct","statusText","undefined","paddingTop","getStatusSearch","getProductSearchResult","ProfileUserPage","useState","setActivePanel","to","setActivePanels","ReactDOM","render","accounts","clickmap","trackLinks","accurateTrackBounce","webvisor","version","CityIdSystem","ii","module","exports","ReverceCatalog","SearchProductTitle","DSr","Objs","retr","forEach","oneProduct","array","testInput","SearchProductFilterCategory","filterActive","SearchProductDescription","SearchProductType","ListIdProduct","re","mod","testType","str","toLowerCase","compare","comparePrice","ArrayProducts","ClickProductF","ReverceStatus","SearchText","filtercategorys","CatalogLists","ArrayPr","ShowProductCategory","nameCategorys","resGetSets","GetSets","SearchState","names","filtersOPT","GetSushi","GetRoli","GetNoneCat","alignItems","filters","clickOneFilter","clickOneFilterDeleted","activeFilter","numb","int","ResPrVal","ResultCategoryReturn","FormNewAddress","streetSearch","entrance","flat","streetCityVisual","streetName","streetList","pauseLoadStreet","addressItems","statusChech","minValue","valPls","onInput","getStreetList","setStreetList","S","idC","nameStreet","city_users_id","params","idCity","ListCityOrigin","listCity","ListCitys","ListOption","Localitytype","LocalityName","LocalityId","typeStreet","minHeight","setStreetCityAdres","typeLocality","idLocality","saveNewAddress","saveEditAddress","getOkStreetNameValue","getFormSetStreetName","getOkStreetNameValueEdit","getFormSetStreetNameEdit","getEditForm","getNulledForm"],"mappings":"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","file":"static/js/main.630307e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n//import {Initializer as YM} from 'react-yandex-metrika';\r\nimport ym from 'react-yandex-metrika';\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div\r\n                key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct}\r\n                className=\"blockProduct\"\r\n                id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}\r\n            >\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    {/*<a href={\"//vk.com/app7145362_328965469#getPageProduct&idCategory=\"+typeProduct.id_Category+\"&idProduct=\"+typeProduct.id_Product+\"\"} onClick={(e) => e.preventDefault()}>*/}\r\n                        <a href={\"//vk.com/app7785654_328965469#getPageProduct&idCategory=\"+typeProduct.id_Category+\"&idProduct=\"+typeProduct.id_Product+\"\"} onClick={(e) => e.preventDefault()}>\r\n\r\n                        <img\r\n                            alt={typeProduct.title}\r\n                            src={typeProduct.img}\r\n                            onClick={() => {\r\n                                ClickProduct('Panels_Product');\r\n                                setProductModal([typeProduct]);\r\n                                console.log('Нажали на фотку', ProductCat, idTypeProduct);\r\n                                try {\r\n                                    if (global.Metrika.Markers[3].active == '1') {\r\n                                        ym('reachGoal', global.Metrika.Markers[3].marker);\r\n                                    }\r\n                                }catch (e) {\r\n\r\n                                }\r\n                                //console.log('reachGoal',global.Metrika.Markers[3].marker);\r\n                                // {ym(global.Metrika.idCounter, 'reachGoal', global.Metrika.Markers[3].marker)}\r\n                            }\r\n                            }\r\n                        />\r\n                    </a>\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    <span className=\"titleProductOne\">{escapeHtmlDecode(typeProduct.title)}</span>\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                    <div className=\"clr\"></div>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//hochuchoto.ru\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, Group, Cell, ModalRoot,Radio, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28BlockOutline from '@vkontakte/icons/dist/28/block_outline';\r\n\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader, Search} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport SearchResultProductBlock from './panels/SearchResultProductBlock';\r\n\r\nimport './panels/catalog/product.css';\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./panels/global/index.js');\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//hochuchoto.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:1,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            },\r\n\r\n            activeHashPageProduct:false,\r\n            activeProductHash:{},\r\n            activeCategoryHash:\"8\",\r\n            activefilter:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    ClickOneFilter(a){\r\n        this.setState({activefilter:a});\r\n    }\r\n\r\n    ClickOneFilterDeleted(){\r\n        this.setState({activefilter:null});\r\n    }\r\n\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                    console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    getInfoSearchStatus(){\r\n        if(global.settingsFilterSearch.typeProduct === false){\r\n            return \"\";\r\n        }else{\r\n            return \"вкл\";\r\n        }\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setFailNewOrderView(){\r\n        console.log('Показать окно');\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        this.setState({activeStory: 'newOrderInfoFail',\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n            DopProductUserSet:{}\r\n        });\r\n        this.getUserSystemInfo(this.state.user.id);\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getFailOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon28BlockOutline />}\r\n\r\n            >\r\n                <h2>Оплата не прошла</h2>\r\n                <p>К сожалению, мы не смогли принять Ваш заказ</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 1,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 1){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://hochuchoto.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        // console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            var ststusSlideData = this.StatusReloadBasketData(JSON.stringify(this.state.slideHeaderArray),JSON.stringify(ArraySlide));\r\n            if(ststusSlideData === true) {\r\n                this.setState({slideHeaderArray: ArraySlide});\r\n                if (this.state.StatusLoadSlide === false) {\r\n                    this.setState({StatusLoadSlide: true});\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://hochuchoto.ru/test.json',\r\n            // url:'https://hochuchoto.ru/test2.json',\r\n            url:'https://hochuchoto.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                Metrika: data.MetrikaAction,\r\n                loadingCatalog:true\r\n            });\r\n            global.Metrika = data.MetrikaAction;\r\n            //console.log(this.state.Metrika);\r\n            console.log(global.Metrika);\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n\r\n        const setModalsPay = this.setModal.bind(this,null);\r\n        const setModalsPayError = this.setModal.bind(this,null);\r\n        const setStatesPay = ()=>{this.setState({newOrderStats:true});};\r\n\r\n        const setOkNewOrderViewHandl= this.setOkNewOrderView.bind(this);\r\n        const setFailNewOrderViewHandl= this.setFailNewOrderView.bind(this);\r\n\r\n        window.addEventListener('message',function(e){\r\n            if(typeof(e.data) === 'object'){\r\n                //console.log(e.data);\r\n                if(\"task\" in e.data){\r\n                    var task = e.data['task'];\r\n                    console.log(\"Статус оплаты - \",task);\r\n                    if(task == 'successPaymentOk'){\r\n                        console.log('Оплата произведена успешно!');\r\n                        setModalsPay(1);\r\n                        setStatesPay();\r\n                        setOkNewOrderViewHandl();\r\n                    }\r\n                    if(task == 'failPaymentError'){\r\n                        console.log('Оплата была отменена!');\r\n                        setModalsPayError(2);\r\n                        setFailNewOrderViewHandl();\r\n                    }\r\n                }else{\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    statusOrderPaymentResult(a = null){\r\n        if(a == '1'){this.setModal(null);}\r\n        if(a == '2'){this.setModal(null);}\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://hochuchoto.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n      // const ParthParam =  this.parseQueryString(window.location.url);\r\n      //   const queryParams = this.parseQueryString(window.location.search);\r\n       // const queryParams =  new URLSearchParams(window.location.search);\r\n      //   const queryParams = this.getURLParams();\r\n      //   console.log('Парметры приняты - - - - -',HashParam);\r\n\r\n\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n\r\n\r\n        if('getPageProduct' in HashParam){\r\n            // this.state.loadingCatalog = false;\r\n            // this.setHashNew('notifications');\r\n            console.log('Показать модалку товара - ',HashParam.idProduct, 'из категории - ',HashParam.idCategory);\r\n\r\n            this.state.loadingCatalog === true ?\r\n               this.setPageModalProductHash(this.state.products,HashParam.idCategory,HashParam.idProduct)\r\n                :\r\n                setTimeout(()=>{ this.setHashDataReload(this)},300)\r\n\r\n            //setTimeout(()=>{ console.log(this.state.products,' товары тут');},2000)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    setPageModalProductHash(ProductArray,idCategory,idProduct){\r\n\r\n        console.log(this.state.products, ' товары тут');\r\n\r\n        if(idCategory in ProductArray){\r\n            if(\"ProductList\" in ProductArray[idCategory]){\r\n                if(idProduct in ProductArray[idCategory].ProductList) {\r\n                    if(\"0\" in ProductArray[idCategory].ProductList[idProduct]){\r\n                        console.log(ProductArray[idCategory].ProductList[idProduct][0]);\r\n                        this.setState({\r\n                            activeHashPageProduct:true,\r\n                            activeProductHash:ProductArray[idCategory].ProductList[idProduct],\r\n                            activeCategoryHash:idCategory}\r\n                            )\r\n                    }else{\r\n                        console.log('Тип 0 не найден');\r\n                    }\r\n                }else{\r\n                    console.log('IdProduct не найден');\r\n                }\r\n            }else{\r\n                console.log('ProductList не найден');\r\n            }\r\n        }else{\r\n            console.log('idCategory не найден');\r\n        }\r\n\r\n        console.log('Все шаги пройдены - но какая то лажа');\r\n    }\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    getFilterBlockModal(def){\r\n\r\n        var defs = {0:\"\",1:\"\"};\r\n        defs[def] = \"defaultChecked\";\r\n\r\n        return(\r\n            <div>\r\n                <Group\r\n                    title=\"Искать\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 0 ? true : false}\r\n                            name=\"typeSearch\" value=\"0\"\r\n                            description=\"Поиск по наименованию товара\"\r\n                            onClick={() => {\r\n                                var some = {...this.state.settingsFilterSearch}\r\n                                some.typeSearch = 0;\r\n                                this.setState({some})\r\n                                global.settingsFilterSearch.typeSearch = 0;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >По названиям</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 1 ? true : false}\r\n                            name=\"typeSearch\"\r\n                            value=\"1\"\r\n                            description=\"Поиск по описанию товара\"\r\n                                onClick={() => {\r\n                                    var some = {...this.state.settingsFilterSearch}\r\n                                    some.typeSearch = 1;\r\n                                    global.settingsFilterSearch.typeSearch = 1;\r\n                                    this.setState({some})\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >По составу</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group\r\n                    title=\"Тип товара\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === false ? true : false}\r\n                            name=\"typeSearchProduct\" value=\"0\"\r\n                            onClick={() => {\r\n                                global.settingsFilterSearch.typeProduct = false;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >Все</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"new\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"new\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"new\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Новинки</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"hot\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"hot\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"hot\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Горячие</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"burn\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"burn\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"burn\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Острые</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"vegan\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"vegan\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"vegan\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Вегетарианские</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"sweet\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"sweet\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"sweet\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Десерт</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group>\r\n                <Cell></Cell>\r\n                </Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stateRadio(a){\r\n        var some = {...this.state.settingsFilterSearch}\r\n        some.typeSearch = a;\r\n        this.setState({some});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_Filter_Catalog\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Готово</HeaderButton>}\r\n                        >\r\n                            Фильтры\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Фильтры\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.getFilterBlockModal(this.state.settingsFilterSearch.typeSearch)}\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id=\"MODAL_PAYMENT_FORM\"\r\n                    onClose={() => this.setModal(null)}\r\n                    settlingHeight={100}\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    <div style={{\"position\":\"fixed\",\"width\":\"100%\",\"height\":\"100%\",\"top\":\"0\",\"left\":0}}>\r\n                        <iframe name=\"framePayments\" id=\"framePayments\" style={{width:\"100%\",height:\"100%\",background:\"#ffffff\"}}\r\n                                src={\"https://hochuchoto.ru/api/testPageSBRPay&apiKey=\"+global.ApiKey+\"\"}\r\n                        />\r\n                    </div>\r\n                    <div style={{height:\"800px\"}}></div>\r\n\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'discover'}*/}\r\n                    {/*    label={this.getInfoSearchStatus()}*/}\r\n                    {/*    data-story=\"discover\"*/}\r\n                    {/*    text=\"Поиск\"*/}\r\n                    {/*><Icon28Search /></TabbarItem>*/}\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'notifications'}*/}\r\n                    {/*    data-story=\"notifications\"*/}\r\n                    {/*    label={countNoticeView}*/}\r\n                    {/*    text=\"Уведомления\"*/}\r\n                    {/*><Icon28Notifications /></TabbarItem>*/}\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"newOrderInfoFail\" activePanel=\"newOrdersFail\" header={false}>\r\n                    <Panel id=\"newOrdersFail\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getFailOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false} modal={modal}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct\r\n                                    setCart={this.setCart.bind(this)}\r\n                                    CartProducts={this.state.cart}\r\n                                    ProductsLists={this.state.products}\r\n                                    sliderHeader={this.getSliderGalery.bind(this)}\r\n                                    queryParams={queryParams}\r\n\r\n                                    showModal={this.setModal.bind(this)}\r\n                                    hideModals={this.setModal.bind(this,null)}\r\n\r\n                                    activeProductHash={this.state.activeProductHash}\r\n                                    activeCategoryHash={this.state.activeCategoryHash}\r\n                                    activeHashPageProduct={this.state.activeHashPageProduct}\r\n\r\n                                    activefilter={this.state.activefilter}\r\n                                    ClickOneFilter={this.ClickOneFilter.bind(this)}\r\n                                    ClickOneFilterDeleted={this.ClickOneFilterDeleted.bind(this)}\r\n\r\n                                />\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\" modal={modal}>\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                        <Cell\r\n                            className=\"BoxCellSearch\"\r\n                            asideContent={\r\n                                <Icon24Filter\r\n                                    onClick={\r\n                                        ()=>{this.setModal('MODAL_Filter_Catalog');}\r\n                                    }\r\n                                />}\r\n                        >\r\n                            <Search\r\n                                value={this.state.search}\r\n                                onChange={this.onChange}\r\n                                after={null}\r\n                            />\r\n                        </Cell>\r\n                        <SearchResultProductBlock\r\n                            setCart={this.setCart.bind(this)}\r\n                            arrayProduct={this.state.products}\r\n                            varSearch={this.state.search}\r\n                            showModal={this.setModal.bind(this)}\r\n                            hideModals={this.setModal.bind(this,null)}\r\n                            CartProducts={this.state.cart}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано бонусов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено бонусов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#f25900';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href={global.linkSocSeti} target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\nimport GetCartHome from \"../Cart/CartHome\";\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList\r\n                setCart={OPT.setCart.bind(this)}\r\n                CartProducts={OPT.CartProducts}\r\n                ProductsLists={OPT.ProductsLists}\r\n                sliderHeader={OPT.sliderHeader.bind(this)}\r\n                queryParams={OPT.queryParams}\r\n\r\n                showModal={OPT.showModal.bind(this)}\r\n                hideModals={OPT.hideModals.bind(this,null)}\r\n\r\n                activeProductHash={OPT.activeProductHash}\r\n                activeCategoryHash={OPT.activeCategoryHash}\r\n                activeHashPageProduct={OPT.activeHashPageProduct}\r\n\r\n                activefilter={OPT.activefilter}\r\n                ClickOneFilter={OPT.ClickOneFilter.bind(this)}\r\n                ClickOneFilterDeleted={OPT.ClickOneFilterDeleted.bind(this)}\r\n\r\n            />\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, Search,Cell, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport ym from 'react-yandex-metrika';\r\nrequire('../../panels/global/index.js');\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}],\r\n            search: global.searchProduct\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    getHashProductPageActive(){\r\n        if(this.props.activeHashPageProduct === true){\r\n            console.log('Запускаем страницу с товаром');\r\n\r\n            this.setActiveCategory(this.props.activeCategoryHash);\r\n            this.setProductModal(this.props.activeProductHash);\r\n            this.hndlClick('Panels_Product');\r\n        }else{\r\n            console.log('Не получилось, ждем повторения');\r\n            setTimeout(()=>{\r\n                this.getHashProductPageActive();\r\n            },800);\r\n        }\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                     //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                   // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n        this.getHashProductPageActive();\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n    getKomboProductData(DataKombo,AllProduct){\r\n        //console.log(DataKombo);\r\n        const res = Object.keys(DataKombo).map( (data,id,ArrK) => {\r\n            const res1 = Object.keys(AllProduct).map((d,i,arr)=>{\r\n                       const res2 = Object.keys(AllProduct[d].ProductList).map((dp,ip,arrp)=>{\r\n                            if(dp === data){\r\n                                return(\r\n                                    <Cell key={data} className=\"komboProducts\"\r\n                                          before={<img\r\n                                              src={AllProduct[d].ProductList[data][0]['img']}\r\n                                              style={{width:\"80px\",marginRight:\"15px\",marginTop:\"10px\"}}\r\n                                          />\r\n                                          }\r\n                                          asideContent={DataKombo[data]['count']+'шт'}\r\n                                          // bottomContent={\r\n                                          //     <span style={{fontSize:\"0.75em\"}}>\r\n                                          //         {AllProduct[d].ProductList[data][0]['weight']+' '+AllProduct[d].ProductList[data][0]['weight_type']}\r\n                                          //     </span>\r\n                                          // }\r\n                                          size=\"l\"\r\n                                          description={AllProduct[d].ProductList[data][0]['description']}\r\n                                          multiline={true}\r\n                                    >\r\n                                        {AllProduct[d].ProductList[data][0]['title']}\r\n                                    </Cell>\r\n                                )\r\n                            }else{\r\n                                return '';\r\n                            }\r\n                       });\r\n                       return res2;\r\n                    //{console.log(d,i,arr)}\r\n                });\r\n            return res1;\r\n            });\r\n        return(\r\n            <div style={{marginBottom:\"10px\"}}>{res}</div>\r\n        );\r\n    }\r\n\r\n    getFeaturesBlock(FeaturesData){\r\n\r\n        const res = Object.keys(FeaturesData).map((d,i,arr)=>{\r\n            if(FeaturesData[d]['show'] == 'show' & (\"features\" in FeaturesData[d])){\r\n                var defs = this.getFeaturesData(FeaturesData[d]['features']);\r\n                if(defs === false){\r\n\r\n                }else {\r\n                    return (\r\n                        <Group\r\n                            key={d}\r\n                            title={FeaturesData[d]['title']}\r\n                        >\r\n                            {defs}\r\n                        </Group>\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            res\r\n        );\r\n    }\r\n\r\n    getFeaturesData(Features){\r\n        var defs = false;\r\n        const res = Object.keys(Features).map((d,i,arr)=>{\r\n            if(Features[d]['text'] != ''){\r\n                defs = true;\r\n                return(\r\n                    <Cell key={d}\r\n                          asideContent={Features[d]['text']+' '+Features[d]['unit']}\r\n                          // before={}\r\n                    >\r\n                        {Features[d]['title']}\r\n                    </Cell>\r\n                );\r\n            }\r\n        });\r\n        if(defs === true) {\r\n            return (res);\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        function getWeightProduct(Product_Weight,Product_WeightType){\r\n            if(Product_WeightType != 'л'){\r\n                return(\r\n                    number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n                );\r\n            }else{\r\n                return(\r\n                    Product_Weight+' '+Product_WeightType\r\n                );\r\n            }\r\n        }\r\n\r\n        function number_format(number, decimals, dec_point, separator ) {\r\n            number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n            var n = !isFinite(+number) ? 0 : +number,\r\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n                sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n                s = '',\r\n                toFixedFix = function(n, prec) {\r\n                    var k = Math.pow(10, prec);\r\n                    return '' + (Math.round(n * k) / k)\r\n                        .toFixed(prec);\r\n                };\r\n            // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n                .split('.');\r\n            if (s[0].length > 3) {\r\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n            }\r\n            if ((s[1] || '')\r\n                .length < prec) {\r\n                s[1] = s[1] || '';\r\n                s[1] += new Array(prec - s[1].length + 1)\r\n                    .join('0');\r\n            }\r\n            return s.join(dec);\r\n        }\r\n\r\n        //Модалка продукта\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div\r\n                        className=\"blockProduct maxWidths\"\r\n                        style={{\"margin\":\"0\",\"textAlign\":\"left\"}}\r\n                    >\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Group\r\n                            id={'product_type_'+OPT.ProductInfo[0].type_info}\r\n                        >\r\n                            <Div style={{position:\"relative\"}}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">\r\n                                <span className=\"titleProductOne\">{escapeHtmlDecode(OPT.ProductInfo[0].title)}</span>\r\n                                <span className=\"redTextP\">\r\n                                    {getWeightProduct(OPT.ProductInfo[0].weight,OPT.ProductInfo[0].weight_type)}\r\n                                </span>\r\n                                <div className=\"clr\"></div>\r\n                            </div>\r\n\r\n\r\n                                <Div className=\"DescrProduct\">\r\n                                    {escapeHtmlDecode(OPT.ProductInfo[0].description)}\r\n                                    <div>\r\n                                    </div>\r\n                                    {OPT.ProductInfo[0].type_info != '' ?\r\n                                        <div className=\"WeightBlock\">\r\n                                            {OPT.ProductInfo[0].type_info}\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </Div>\r\n\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                            </Div>\r\n                        </Group>\r\n\r\n                        {OPT.ProductInfo[0].komboPoduct.length <= 0 ?\r\n                            \"\"\r\n                            :\r\n                            <Group\r\n                            title=\"В набор входят\"\r\n                            >\r\n                                {OPT.getKomboProductData(OPT.ProductInfo[0].komboPoduct,OPT.AllProduct)}\r\n                            </Group>\r\n                        }\r\n\r\n                        {OPT.getFeaturesBlock(OPT.ProductInfo[0].featuresProduct)}\r\n                        <div style={{clear:\"both\",height:\"60px\",width:\"100%\"}}></div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        filterCategorys={OPT.CategoryList[OPT.ShowCategory].filterCategory || []}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                        searchProduct={OPT.searchProduct}\r\n\r\n                        activefilter={OPT.activefilter}\r\n                        ClickOneFilter={OPT.ClickOneFilter.bind(this)}\r\n                        ClickOneFilterDeleted={OPT.ClickOneFilterDeleted.bind(this)}\r\n\r\n                        showModal={OPT.showModal.bind(this)}\r\n                        hideModals={OPT.hideModals.bind(this,null)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function compareUnitaz(a, b) {\r\n            return a.position - b.position;\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n            global.settingsFilterSearch.typeProduct = false;\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n\r\n                    // console.log(OPT.CategoryList);\r\n\r\n\r\n                    let NewSort = [];\r\n                    Object.keys(OPT.CategoryList).map((id,kk)=>{\r\n                       NewSort.push(OPT.CategoryList[id]);\r\n                    });\r\n                    NewSort.sort(compareUnitaz);\r\n                     // console.log(NewSort);\r\n\r\n\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = NewSort.map((Categorys, key) =>\r\n                        Categorys.ProductList !== null ?\r\n                            <Div\r\n                                style={{\"background\":\"url(//hochuchoto.ru/images/API_IMG/\"+Categorys.imgCategory+\") no-repeat\",\"backgroundSize\":\"100%\",backgroundPosition:\"center\"}}\r\n                                // style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//hochuchoto.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                                className=\"DivCategoryBlock\"\r\n                                key={key+'_'+Categorys.id_Category}\r\n                                onClick={\r\n                                    () => {\r\n                                        OPT.ActiveCategory(Categorys.id_Category);\r\n                                        OPT.ClickCategory('Panels_38');\r\n                                        OPT.ClickOneFilter(null);\r\n                                    }\r\n                                }\r\n                            >{console.log('Выводим категорию')}\r\n                                {/*{OPT.CategoryList[idCategorys].Title}*/}\r\n                            </Div> :\r\n                         \"\"\r\n\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//hochuchoto.ru/images/API_IMG/logo.png\" style={{\"maxWidth\":\"80px\"}}/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>{global.phonenumberCollVisual}</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href={global.phonenumberColl}>Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels\r\n                            key=\"BrandPanels\"\r\n                            CategoryList={this.state.products}\r\n                            Loadings={this.state.loadingPage}\r\n                            ClickCategory={this.hndlClick.bind(this)}\r\n                            ActiveCategory={this.setActiveCategory.bind(this)}\r\n                            ClickOneFilter={this.props.ClickOneFilter.bind(this)}\r\n                        />\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <Cell\r\n                        className=\"BoxCellSearch\"\r\n                        asideContent={\r\n                            <Icon24Filter\r\n                                onClick={\r\n                                    ()=>{this.props.showModal('MODAL_Filter_Catalog');}\r\n                                }\r\n                            />}\r\n                    >\r\n                        <Search\r\n                            value={this.state.search}\r\n                            onChange={this.onChange}\r\n                            after={null}\r\n                        />\r\n                    </Cell>\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        searchProduct={this.state.search}\r\n\r\n                        activefilter={this.props.activefilter}\r\n                        ClickOneFilter={this.props.ClickOneFilter.bind(this)}\r\n                        ClickOneFilterDeleted={this.props.ClickOneFilterDeleted.bind(this)}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        AllProduct={this.state.products}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        getKomboProductData={this.getKomboProductData.bind(this)}\r\n                        getFeaturesBlock={this.getFeaturesBlock.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://hochuchoto.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://hochuchoto.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return \"\";\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div style={{display: 'flex',justifyContent:'center'}}>\r\n        //             <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#f25900\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n        //             <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n        //             <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#f25900\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n        //         </Div>\r\n        //     </Group>\r\n        // );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#f25900\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#f25900\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#f25900',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://hochuchoto.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://hochuchoto.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://hochuchoto.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://hochuchoto.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://hochuchoto.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        if(name === 'SelectDatePreorder'){\r\n            this.setState({SelectTimePreorder: null});\r\n            this.props.setStates({SelectTimePreorder: null});\r\n        }\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\n// import SberbankIPay from 'react-sberbank-ipay';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно бонусов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> бонусов</Cell>);\r\n        }\r\n    }\r\n\r\n\r\n    getPageSberbank(){\r\n        axios('https://arenda.ebee.me/api/testPageSBRPay&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    // console.log('Ответ сервера ',data);\r\n                    console.log(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        {/*<Group title=\"Оплата бонусными баллами\">*/}\r\n                        {/*    {this.getCountsTimeBonus()}*/}\r\n\r\n                        {/*</Group>*/}\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                {/*<Cell before={<Icon24Coins />}> Списано бонусов: <b>{this.props.SalePoints}</b></Cell>*/}\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n                                    {/*<Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, онлайн\"*/}\r\n                                    {/*       defaultChecked={this.props.DataDeliveryInfo.typePay === 0 ? true : false}*/}\r\n                                    {/*       onClick={() => {this.props.setStates({typePay:0})}}>Онлайн</Radio>*/}\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                                        sumItog={this.getSumCartItogo()}\r\n\r\n                                                        showModalPayment={this.props.showModal.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://hochuchoto.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        if(data.infoNewOrder.typePayment == '0'){\r\n                            this.props.showModalPayment('MODAL_PAYMENT_FORM');\r\n                            setTimeout(function(){\r\n                                var win = document.getElementById(\"framePayments\");\r\n                                console.log(document.getElementById(\"framePayments\").contentWindow.postMessage({\"idOrder\":data.infoNewOrder.idNewOrder,\"summaPayment\":data.infoNewOrder.sumPaymentItog,idPointsPaymentToken:data.infoNewOrder.idPointsPaymentToken}, \"*\"));\r\n                            },500);\r\n                        }else{\r\n                            this.props.getPageOkOrderSet({newOrderStats:true});\r\n                            this.props.setOkNewOrderView();\r\n                        }\r\n\r\n                        try{\r\n                            if(global.Metrika.Markers[4].active == '1') {\r\n                                ym('reachGoal', global.Metrika.Markers[4].marker);\r\n                            }\r\n                        }catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React, {useState} from 'react';\r\n\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport {Div,PanelHeader,HeaderButton, IOS,platform,Placeholder} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport ProductList from \"./catalog/ProductList\";\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./global/index.js');\r\n\r\nclass SearchResultProductBlock extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            arrayProduct:this.props.arrayProduct,\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            }\r\n            ,\r\n            search: global.searchProduct\r\n        }\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                        //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                    // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.arrayProduct);\r\n    }\r\n\r\n    getArrayCategoryProduct(){\r\n        const ArCat = Object.keys(this.state.arrayProduct);\r\n        const ResultProductList =  ArCat.map((data,key)=>{\r\n            //console.log(data,key, 'оророро');\r\n\r\n            var ResultCatsSearch =\r\n                <ProductList\r\n                    onClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                    productsLists={this.state.arrayProduct[data].ProductList}\r\n                    key={this.state.arrayProduct[data].id_Category}\r\n                    idCategorys={data}\r\n                    nameCategory=\"sets\"\r\n                    setCart={this.props.setCart.bind(this)}\r\n                    getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    setProductModal={this.setProductModal.bind(this)}\r\n                    searchProduct={this.props.varSearch}\r\n\r\n                    showModal={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    clrStatus={false}\r\n                />;\r\n\r\n            return (ResultCatsSearch);\r\n\r\n        });\r\n        return ResultProductList;\r\n    }\r\n\r\n    getProductSearchResult(OPT) {\r\n\r\n        return (\r\n            this.getArrayCategoryProduct()\r\n        );\r\n    }\r\n\r\n    getStatusSearch(){\r\n        var statusText = false;\r\n        var statusFiltes = false;\r\n\r\n        this.props.varSearch === '' || this.props.varSearch === undefined ? statusText = false : statusText = true;\r\n        global.settingsFilterSearch.typeProduct === false ? statusFiltes = false : statusFiltes = true;\r\n\r\n        if(statusFiltes === true || statusText === true){\r\n            //console.log(statusFiltes,statusText);\r\n            return true;\r\n        }else{\r\n            //console.log(statusFiltes,statusText);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n        const osname = platform();\r\n\r\n\r\n\r\n\r\n        return (<Div style={{background:\"#FFFFFF\",paddingTop:\"60px\"}}>\r\n            {\r\n                this.getStatusSearch() === false ?\r\n                    <Placeholder\r\n                        icon={<Icon28Search />}\r\n                        header=\"Поиск пуст\"\r\n                    >\r\n                       Начните вводить название товара или выберите фильтр\r\n                    </Placeholder>\r\n                    :\r\n                    this.getProductSearchResult()\r\n            }\r\n        </Div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SearchResultProductBlock;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './StartPageVKapp';\r\n// import App from './App2';\r\n// import registerServiceWorker from './sw';\r\nimport { YMInitializer } from 'react-yandex-metrika';\r\n\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(\r\n        <App />\r\n    , document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <YMInitializer\r\n        accounts={[56971987]}\r\n        options = { {\r\n            clickmap:true,\r\n            trackLinks:true,\r\n            accurateTrackBounce:true,\r\n            webvisor:true\r\n        } }\r\n        version = \"2\"\r\n    />\r\n    , document.getElementById('Metrickss'));\r\n","// globals/index.js\r\n\r\nglobal.CityIdSystem = '&CityIdSystem=1';\r\n\r\n global.phonenumberCollVisual = '+7 (982) 000-89-89';\r\n global.phonenumberColl = 'tel:+79820008989';\r\n global.linkSocSeti = '//vk.com/im?sel=-199028418';\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9'+global.CityIdSystem;\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';\r\n\r\nglobal.settingsFilterSearch = {\r\n    typeSearch:0,\r\n    typeProduct: false\r\n}\r\n\r\nglobal.ii =0;\r\n\r\nglobal.Metrika = {}","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\nimport { Div, Search, Cell } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\nimport ym from 'react-yandex-metrika';\r\n\r\nimport axios from \"axios\";\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}],\r\n            // activefilter:null\r\n        }\r\n\r\n    }\r\n\r\n    // ClickOneFilter(a){\r\n    //     this.setState({activefilter:a});\r\n    // }\r\n    //\r\n    // ClickOneFilterDeleted(){\r\n    //     this.setState({activefilter:null});\r\n    // }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr, filtercategorys = null){\r\n\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function SearchProductFilterCategory(Pr,filterActive = null){\r\n            // console.log('Фильтруем');\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(filterActive, Pr[oneProduct][0]['filters'][0])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductDescription(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['description'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductType(Pr,DSr,ListIdProduct){\r\n            const retr = [];\r\n\r\n            ListIdProduct.forEach(function (oneProduct, keyId, array) {\r\n               if(testType(DSr, Pr[oneProduct][0]['modyficate'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n           }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testType(re,modyficate) {\r\n            var status = false;\r\n            if(modyficate.length <=0){\r\n                status = false;\r\n            }else{\r\n                modyficate.forEach(function(oneProduct, keyId, array){\r\n                    if(oneProduct.mod === re){\r\n                        status = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return status;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n            re = re.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n            str = str.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null,filtercategorys = null) {\r\n            var CatalogLists = [];\r\n\r\n            // console.log('Фильтры '+filtercategorys);\r\n\r\n            if(filtercategorys!==null){\r\n                CatalogLists = SearchProductFilterCategory(Pr,filtercategorys);\r\n            }else {\r\n\r\n                if (ReverceStatus === 0) {\r\n                    CatalogLists = ReverceCatalog(Pr, filtercategorys);\r\n                }\r\n\r\n                if (ReverceStatus === 1) {\r\n                    CatalogLists = comparePrice(Pr);\r\n                }\r\n\r\n                if (ReverceStatus === 2) {\r\n                    CatalogLists = Object.keys(Pr);\r\n                }\r\n\r\n                if (ReverceStatus === 3) {\r\n                    if (global.settingsFilterSearch.typeSearch === 0) {\r\n                        CatalogLists = SearchProductTitle(Pr, SearchText);\r\n                    } else {\r\n                        CatalogLists = SearchProductDescription(Pr, SearchText);\r\n                    }\r\n                    try {\r\n                        if (global.Metrika.Markers[2].active == '1') {\r\n                            ym('reachGoal', global.Metrika.Markers[2].marker);\r\n                        }\r\n                    } catch (e) {\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(global.settingsFilterSearch.typeProduct === false){}else{\r\n                CatalogLists = SearchProductType(Pr, global.settingsFilterSearch.typeProduct,CatalogLists);\r\n            }\r\n\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct\r\n                    key={'Products_'+keyId}\r\n                    product={Pr[oneProduct]}\r\n                    ClickProduct={ClickProductF.bind(this)}\r\n                    setCart={setCart.bind(this)}\r\n                    setProductModal={setProductModal.bind(this)}\r\n                    getButtonInCartProduct={getButtonInCartProduct.bind(this)}\r\n                />\r\n            );\r\n\r\n            if(ArrayPr.length <=0){\r\n               return false;\r\n            }else{\r\n                return ArrayPr;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            // console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                const resGetSets = <GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                    clrStatus={nameCategorys.clrStatus}\r\n                    filterCategorys={nameCategorys.filterCategorys}\r\n                    filtersOPT={nameCategorys.filtersOPT}\r\n                />;\r\n                if(resGetSets === false){\r\n\r\n                    return false;\r\n                }else{\r\n                    //console.log(resGetSets);\r\n                    return (resGetSets);\r\n                }\r\n\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n        function GetButtonFilterCategory(filters,clickOneFilter,clickOneFilterDeleted,activeFilter){\r\n            if(typeof (filters) === 'object' ){\r\n              return  Object.keys(filters).map((numb,int)=>{\r\n                  if(numb===activeFilter){\r\n                      return(\r\n                          <div className=\"activeFiltersCategorys\" onClick={()=>{clickOneFilterDeleted(numb)}}>{filters[numb]}</div>\r\n                      )\r\n                  }else{\r\n                      return(\r\n                          <div className=\"FiltersCategorys\" onClick={()=>{clickOneFilter(numb)}}>{filters[numb]}</div>\r\n                      )\r\n                  }\r\n              });\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n          // console.log('SearchState ',ArrayPr.SearchState );\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false || ArrayPr.SearchState === undefined){\r\n                return (\r\n                    <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                        <div style={{display:\"flex\",justifyContent:\"flex-start\",alignItems:\"center\"}}>{GetButtonFilterCategory(ArrayPr.filterCategorys,ArrayPr.filtersOPT.clickOneFilter.bind(this),ArrayPr.filtersOPT.clickOneFilterDeleted.bind(this),ArrayPr.filtersOPT.activefilter)}</div>\r\n                        <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                            {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0,null,ArrayPr.filtersOPT.activefilter)}\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n\r\n                const ResPrVal = ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState);\r\n\r\n                if(ResPrVal === false){\r\n                   //console.log('Нет данных',ResPrVal);\r\n                    return false;\r\n                }else{\r\n                    return (\r\n                        <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                            <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                                {ResPrVal}\r\n                            </Div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        if(this.props.clrStatus === undefined){\r\n            var clrStatus = true;\r\n        }else{\r\n            var clrStatus = this.props.clrStatus;\r\n        }\r\n\r\n        const ResultCategoryReturn = <ShowProductCategory\r\n            SearchState={this.props.searchProduct}\r\n            productsLists={this.props.productsLists}\r\n            nameCategorys={this.props.nameCategory}\r\n            filterCategorys={this.props.filterCategorys}\r\n            idCategory={this.props.idCategorys}\r\n            ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n            setCart={this.props.setCart.bind(this)}\r\n            setProductModal={this.props.setProductModal.bind(this)}\r\n            getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            clrStatus={clrStatus}\r\n\r\n            filtersOPT={{activefilter: this.props.activefilter,clickOneFilter:this.props.ClickOneFilter.bind(this),clickOneFilterDeleted:this.props.ClickOneFilterDeleted.bind(this)}}\r\n\r\n        />;\r\n\r\n        if(ResultCategoryReturn === false){\r\n            return (\"\");\r\n        }else{\r\n            //console.log(ResultCategoryReturn);\r\n            return (\r\n                ResultCategoryReturn\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select, Search, Footer, Cell } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                streetSearch: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:'',\r\n            streetCityVisual:'',\r\n            streetName:null,\r\n            streetList:{},\r\n            search:'',\r\n            pauseLoadStreet:true\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            //{ label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment,\r\n                streetCityVisual:this.props.AddressEdit.city+' '+this.props.AddressEdit.street,\r\n                streetName:this.props.AddressEdit.street,\r\n                streetList:{},\r\n                search:this.props.AddressEdit.street,\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n    onInput(e) {\r\n        console.log(e);\r\n        this.setState({ search: e });\r\n        if(e.length >2) {\r\n            this.getStreetList(e, 1);\r\n        }else{\r\n            this.setStreetList({});\r\n        }\r\n        // console.log(e.target.value,'Ввели');\r\n        // this.getStreetList(e.target.value,1)\r\n        // return value;\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://hochuchoto.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://hochuchoto.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    getStreetList(S,idC){\r\n        console.log(S,idC,'Передали');\r\n        this.setState({pauseLoadStreet:true});\r\n       // this.props.setPopout({ popout:<ScreenSpinner />});\r\n        axios('https://hochuchoto.ru/api/getStreetList&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                params:{\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(\"result\" in data){\r\n                        console.log('Получили список вариантов',data.result);\r\n                        this.setStreetList(data.result);\r\n                       // this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Получение списка улиц---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    setStreetList(list){\r\n        this.setState({streetList : list,pauseLoadStreet:true});\r\n        console.log('прпрпрпр',this.state.streetList);\r\n        this.setState({pauseLoadStreet:false});\r\n    }\r\n\r\n    setStreetCityAdres(Localitytype,LocalityName,LocalityId,typeStreet,streetName) {\r\n        this.setState({\r\n            city: LocalityName,\r\n            street: typeStreet+', '+streetName,\r\n            streetSearch: streetName,\r\n            streetCityVisual: Localitytype+' '+LocalityName+' '+typeStreet + ' ' + streetName,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    getFormSetStreetName(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null} placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValue(){\r\n        return(<FormLayout>\r\n            {/*<Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">*/}\r\n            {/*    {this.getCitySelect(1)}*/}\r\n            {/*</Select>*/}\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    value={\r\n                        this.state[name]\r\n                    }\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#f25900\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getFormSetStreetNameEdit(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null}  placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValueEdit(){\r\n        return(<FormLayout>\r\n\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    value={this.state[name]}\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#f25900\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getNulledForm(){\r\n        return(\r\n                this.state.street !== '' ? this.getOkStreetNameValue() : this.getFormSetStreetName()\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            this.state.street !== '' ? this.getOkStreetNameValueEdit() : this.getFormSetStreetNameEdit()\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;"],"sourceRoot":""}