{"version":3,"sources":["panels/catalog/OneProduct.js","panels/Cart/CartHome.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/catalog/CatalogProduct.js","panels/catalog/CategoryList.js","panels/catalog/ProductList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/PaymentsPage.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/global/index.js","panels/catalog/ButtonInCart.js"],"names":["escapeHtmlDecode","text","replace","OneProduct","product","idCategory","number_format","number","decimals","dec_point","separator","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","length","Array","join","productList","ClickProduct","setCart","setProductModal","getButtonInCartProduct","ProductCat","map","typeProduct","idTypeProduct","key","id_Product","className","id","type_product","ArrayMod","ListMod","Object","keys","VisualList","datas","src","mod_img","getModyficateBlock","modyficate","alt","title","img","onClick","console","log","global","Metrika","Markers","active","ym","marker","e","Product_Weight","weight","Product_WeightType","weight_type","description","type_info","price_discount","style","fontWeight","fontSize","marginRight","old_price","new_price","price","getPriceProducts","getProductDiv","osName","platform","GetCartHome","props","state","activePanel","popout","LoadDopProduct","this","setState","LoadStatus","setPopout","a","PopupLoadDop","bind","PresetsDopProductList","list","ListPresets","count","typeCount","textAlign","overflow","float","width","marginLeft","paddingRight","DopProductList","ListDopProduct","getButtonDopProduct","setDopProduct","getCountDopProductIcon","DopProductUserSet","display","paddingBottom","height","minWidth","Prod","alls","idProduct","counts","Buttons","margin","getCartVisual","Products","results","cartProduct","idProducts","marginBottom","clear","color","bottom","CartProducts","typeProduct2","setCarts","getButtonNavigation","typeNav","action","ButtonBlock","data-to","IOS","header","ProductList","icon","sumCart","GetPresetsVisual","theme","size","getOneStepCart","DopProductListVisual","userSystemInfo","userInfo","getUserSystemInfo","addressDefault","setAddressDefault","AffiliateDefault","setAffiliateDefault","checkedTypeDilivery","setTypeDilivery","commentary","setComment","countPerson","setStates","setDeliveryDataItogs","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfo","DataDeliveryInfoPay","stretched","level","SalePoints","getReloadInfODeliveryPay","setOkNewOrderView","React","Component","require","App","parseQueryString","string","slice","queryParam","kvp","value","reduce","query","AudioInfo","ReloadBasket","Audio","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","typePay","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","settingsFilterSearch","typeSearch","onStoryChange","axios","method","url","ApiKey","responseType","then","data","ListCitySelect","catch","err","idUsers","CountNoticeNoCheck","result","type","idNotice","getNotice","getCartDB","as","bs","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","status","StatusReloadBasketData","JSON","stringify","ArraySlides","Bullets","AutoPlays","SliderVisual","maxWidth","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","setUser","getCityUser","MetrikaAction","fetchData","setInterval","getIntervalCart","setHashDataReload","setModalsPay","setModal","setModalsPayError","setOkNewOrderViewHandl","setFailNewOrderViewHandl","setFailNewOrderView","window","addEventListener","task","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","errorInfo","ListOld","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","push","countPlus","setcountCartProduct","noAdd","cartProducts","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","location","hash","newHeight","screen","send","setHashNew","def","defaultChecked","name","some","queryParams","search","modal","onClose","right","dynamicContentHeight","caption","actions","getFilterBlockModal","settlingHeight","background","osname","tabbar","selected","data-story","label","getSuccesOrderPage","getFailOrderPage","userData","setTypeOrderList","left","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","ProductsLists","sliderHeader","getSliderGalery","noShadow","getDeliveryDataPriceItog","setTypeOrderDate","comments","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","UserOrderList","loadOrders","before","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","date","time","id_order","getOrderType","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","statusView","Data","setNoticeData","asideContent","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","CatalogProduct","OPT","useEffect","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","searchProduct","onChange","ButOk","id_CartPr","getCountButton","getInCarts","DataKombo","AllProduct","res","ArrK","d","dp","ip","arrp","marginTop","multiline","FeaturesData","defs","getFeaturesData","Features","getWeightProduct","ModalProductInfo","Loadings","ClickBack","ProductInfo","position","komboPoduct","getKomboProductData","getFeaturesBlock","featuresProduct","GetCategorys","ClickCategory","ShowCategory","Title","onClickProduct","productsLists","id_Category","idCategorys","nameCategory","GetBrandPanels","imgCategory","href","classNameDivCategory","after","ReverceCatalog","SearchProductTitle","DSr","Objs","retr","forEach","oneProduct","keyId","array","testInput","SearchProductDescription","SearchProductType","ListIdProduct","re","mod","testType","str","toLowerCase","compare","b","comparePrice","sort","ArrayProducts","ClickProductF","ReverceStatus","SearchText","CatalogLists","ArrayPr","ShowProductCategory","nameCategorys","resGetSets","GetSets","SearchState","names","ProductArray","clrStatus","GetSushi","GetRoli","GetNoneCat","undefined","ResPrVal","ResultCategoryReturn","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","getPhoneUserVK","layout","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","justifyContent","getDataCountPerson","readOnly","top","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","podezd","etaj","kvartira","openDefault","getAddressFull","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","getBlocknoPreorder","PaymentsPage","value2","statusNewOrder","options","point","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","DataOrderInfo","getDataOrder","getPageOkOrderSet","sumItog","showModalPayment","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","NewOrderServer","infoNewOrder","typePayment","getElementById","contentWindow","postMessage","idNewOrder","sumPaymentItog","UserInfo","them","fetchedUser","photo_200","first_name","last_name","checked","textDecoration","getPanelProfil","ProfileUserPage","useState","setActivePanel","to","setActivePanels","ReactDOM","render","accounts","clickmap","trackLinks","accurateTrackBounce","webvisor","version","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ii","ButtonInCart"],"mappings":"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","file":"static/js/main.59e0a419.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n//import {Initializer as YM} from 'react-yandex-metrika';\r\nimport ym from 'react-yandex-metrika';\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div\r\n                key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct}\r\n                className=\"blockProduct\"\r\n                id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}\r\n            >\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() => {\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку', ProductCat, idTypeProduct);\r\n                            try {\r\n                                if (global.Metrika.Markers[3].active == '1') {\r\n                                    ym('reachGoal', global.Metrika.Markers[3].marker);\r\n                                }\r\n                            }catch (e) {\r\n                                \r\n                            }\r\n                            //console.log('reachGoal',global.Metrika.Markers[3].marker);\r\n                            // {ym(global.Metrika.idCounter, 'reachGoal', global.Metrika.Markers[3].marker)}\r\n                        }\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    <span className=\"titleProductOne\">{escapeHtmlDecode(typeProduct.title)}</span>\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                    <div className=\"clr\"></div>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//hochuchoto.ru\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, Group, Cell, ModalRoot,Radio, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28BlockOutline from '@vkontakte/icons/dist/28/block_outline';\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//hochuchoto.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            }\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n\r\n    setFailNewOrderView(){\r\n        console.log('Показать окно');\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfoFail',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getFailOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon28BlockOutline />}\r\n\r\n            >\r\n                <h2>Оплата не прошла</h2>\r\n                <p>К сожалению, мы не смогли принять Ваш заказ</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://hochuchoto.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        // console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            var ststusSlideData = this.StatusReloadBasketData(JSON.stringify(this.state.slideHeaderArray),JSON.stringify(ArraySlide));\r\n            if(ststusSlideData === true) {\r\n                this.setState({slideHeaderArray: ArraySlide});\r\n                if (this.state.StatusLoadSlide === false) {\r\n                    this.setState({StatusLoadSlide: true});\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://hochuchoto.ru/test.json',\r\n            // url:'https://hochuchoto.ru/test2.json',\r\n            url:'https://hochuchoto.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                Metrika: data.MetrikaAction,\r\n                loadingCatalog:true\r\n            });\r\n            global.Metrika = data.MetrikaAction;\r\n            //console.log(this.state.Metrika);\r\n            console.log(global.Metrika);\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n\r\n            const setModalsPay = this.setModal.bind(this,null);\r\n            const setModalsPayError = this.setModal.bind(this,null);\r\n            const setStatesPay = ()=>{this.setState({newOrderStats:true});};\r\n\r\n            const setOkNewOrderViewHandl= this.setOkNewOrderView.bind(this);\r\n            const setFailNewOrderViewHandl= this.setFailNewOrderView.bind(this);\r\n\r\n        window.addEventListener('message',function(e){\r\n            if(\"task\" in e.data){\r\n                var task = e.data['task'];\r\n                console.log(\"Статус оплаты - \",task);\r\n                 if(task == 'successPaymentOk'){\r\n                     console.log('Оплата произведена успешно!');\r\n                     setModalsPay(1);\r\n                     setStatesPay();\r\n                     setOkNewOrderViewHandl();\r\n                 }\r\n                if(task == 'failPaymentError'){\r\n                    console.log('Оплата была отменена!');\r\n                    setModalsPayError(2);\r\n                    setFailNewOrderViewHandl();\r\n                }\r\n            }else{\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    statusOrderPaymentResult(a = null){\r\n        if(a == '1'){this.setModal(null);}\r\n        if(a == '2'){this.setModal(null);}\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://hochuchoto.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n    }\r\n\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    getFilterBlockModal(def){\r\n\r\n        var defs = {0:\"\",1:\"\"};\r\n        defs[def] = \"defaultChecked\";\r\n\r\n        return(\r\n            <div>\r\n                <Group\r\n                    title=\"Искать\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 0 ? true : false}\r\n                            name=\"typeSearch\" value=\"0\"\r\n                            description=\"Поиск по наименованию товара\"\r\n                            onClick={() => {\r\n                                var some = {...this.state.settingsFilterSearch}\r\n                                some.typeSearch = 0;\r\n                                this.setState({some})\r\n                                global.settingsFilterSearch.typeSearch = 0;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >По названиям</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 1 ? true : false}\r\n                            name=\"typeSearch\"\r\n                            value=\"1\"\r\n                            description=\"Поиск по описанию товара\"\r\n                                onClick={() => {\r\n                                    var some = {...this.state.settingsFilterSearch}\r\n                                    some.typeSearch = 1;\r\n                                    global.settingsFilterSearch.typeSearch = 1;\r\n                                    this.setState({some})\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >По составу</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group\r\n                    title=\"Тип товара\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === false ? true : false}\r\n                            name=\"typeSearchProduct\" value=\"0\"\r\n                            onClick={() => {\r\n                                global.settingsFilterSearch.typeProduct = false;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >Все</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"new\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"new\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"new\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Новинки</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"hot\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"hot\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"hot\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Запеченные</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group>\r\n                <Cell></Cell>\r\n                </Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stateRadio(a){\r\n        var some = {...this.state.settingsFilterSearch}\r\n        some.typeSearch = a;\r\n        this.setState({some});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_Filter_Catalog\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Готово</HeaderButton>}\r\n                        >\r\n                            Фильтры\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Фильтры\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.getFilterBlockModal(this.state.settingsFilterSearch.typeSearch)}\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id=\"MODAL_PAYMENT_FORM\"\r\n                    onClose={() => this.setModal(null)}\r\n                    settlingHeight={100}\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                            <div style={{\"position\":\"fixed\",\"width\":\"100%\",\"height\":\"100%\",\"top\":\"0\",\"left\":0}}>\r\n                                <iframe name=\"framePayments\" id=\"framePayments\" style={{width:\"100%\",height:\"100%\",background:\"#ffffff\"}} src={\"https://hochuchoto.ru/api/testPageSBRPay&apiKey=\"+global.ApiKey+\"\"}/>\r\n                            </div>\r\n                            <div style={{height:\"800px\"}}></div>\r\n\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'notifications'}*/}\r\n                    {/*    data-story=\"notifications\"*/}\r\n                    {/*    label={countNoticeView}*/}\r\n                    {/*    text=\"Уведомления\"*/}\r\n                    {/*><Icon28Notifications /></TabbarItem>*/}\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"newOrderInfoFail\" activePanel=\"newOrdersFail\" header={false}>\r\n                    <Panel id=\"newOrdersFail\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getFailOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false} modal={modal}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct\r\n                                    setCart={this.setCart.bind(this)}\r\n                                    CartProducts={this.state.cart}\r\n                                    ProductsLists={this.state.products}\r\n                                    sliderHeader={this.getSliderGalery.bind(this)}\r\n                                    queryParams={queryParams}\r\n\r\n                                    showModal={this.setModal.bind(this)}\r\n                                    hideModals={this.setModal.bind(this,null)}\r\n                                />\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Бонусов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Бонусов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:'https://hochuchoto.ru/api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#f25900';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\nimport GetCartHome from \"../Cart/CartHome\";\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList\r\n                setCart={OPT.setCart.bind(this)}\r\n                CartProducts={OPT.CartProducts}\r\n                ProductsLists={OPT.ProductsLists}\r\n                sliderHeader={OPT.sliderHeader.bind(this)}\r\n                queryParams={OPT.queryParams}\r\n\r\n                showModal={OPT.showModal.bind(this)}\r\n                hideModals={OPT.hideModals.bind(this,null)}\r\n            />\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, Search,Cell, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport ym from 'react-yandex-metrika';\r\nrequire('../../panels/global/index.js');\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}],\r\n            search: global.searchProduct\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                     //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                   // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n    getKomboProductData(DataKombo,AllProduct){\r\n        //console.log(DataKombo);\r\n        const res = Object.keys(DataKombo).map( (data,id,ArrK) => {\r\n            const res1 = Object.keys(AllProduct).map((d,i,arr)=>{\r\n                       const res2 = Object.keys(AllProduct[d].ProductList).map((dp,ip,arrp)=>{\r\n                            if(dp === data){\r\n                                return(\r\n                                    <Cell key={data} className=\"komboProducts\"\r\n                                          before={<img\r\n                                              src={AllProduct[d].ProductList[data][0]['img']}\r\n                                              style={{width:\"80px\",marginRight:\"15px\",marginTop:\"10px\"}}\r\n                                          />\r\n                                          }\r\n                                          asideContent={DataKombo[data]['count']+'шт'}\r\n                                          // bottomContent={\r\n                                          //     <span style={{fontSize:\"0.75em\"}}>\r\n                                          //         {AllProduct[d].ProductList[data][0]['weight']+' '+AllProduct[d].ProductList[data][0]['weight_type']}\r\n                                          //     </span>\r\n                                          // }\r\n                                          size=\"l\"\r\n                                          description={AllProduct[d].ProductList[data][0]['description']}\r\n                                          multiline={true}\r\n                                    >\r\n                                        {AllProduct[d].ProductList[data][0]['title']}\r\n                                    </Cell>\r\n                                )\r\n                            }else{\r\n                                return '';\r\n                            }\r\n                       });\r\n                       return res2;\r\n                    //{console.log(d,i,arr)}\r\n                });\r\n            return res1;\r\n            });\r\n        return(\r\n            <div style={{marginBottom:\"10px\"}}>{res}</div>\r\n        );\r\n    }\r\n\r\n    getFeaturesBlock(FeaturesData){\r\n\r\n        const res = Object.keys(FeaturesData).map((d,i,arr)=>{\r\n            if(FeaturesData[d]['show'] == 'show' & (\"features\" in FeaturesData[d])){\r\n                var defs = this.getFeaturesData(FeaturesData[d]['features']);\r\n                if(defs === false){\r\n\r\n                }else {\r\n                    return (\r\n                        <Group\r\n                            key={d}\r\n                            title={FeaturesData[d]['title']}\r\n                        >\r\n                            {defs}\r\n                        </Group>\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            res\r\n        );\r\n    }\r\n\r\n    getFeaturesData(Features){\r\n        var defs = false;\r\n        const res = Object.keys(Features).map((d,i,arr)=>{\r\n            if(Features[d]['text'] != ''){\r\n                defs = true;\r\n                return(\r\n                    <Cell key={d}\r\n                          asideContent={Features[d]['text']+' '+Features[d]['unit']}\r\n                          // before={}\r\n                    >\r\n                        {Features[d]['title']}\r\n                    </Cell>\r\n                );\r\n            }\r\n        });\r\n        if(defs === true) {\r\n            return (res);\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        function getWeightProduct(Product_Weight,Product_WeightType){\r\n            if(Product_WeightType != 'л'){\r\n                return(\r\n                    number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n                );\r\n            }else{\r\n                return(\r\n                    Product_Weight+' '+Product_WeightType\r\n                );\r\n            }\r\n        }\r\n\r\n        function number_format(number, decimals, dec_point, separator ) {\r\n            number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n            var n = !isFinite(+number) ? 0 : +number,\r\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n                sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n                s = '',\r\n                toFixedFix = function(n, prec) {\r\n                    var k = Math.pow(10, prec);\r\n                    return '' + (Math.round(n * k) / k)\r\n                        .toFixed(prec);\r\n                };\r\n            // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n                .split('.');\r\n            if (s[0].length > 3) {\r\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n            }\r\n            if ((s[1] || '')\r\n                .length < prec) {\r\n                s[1] = s[1] || '';\r\n                s[1] += new Array(prec - s[1].length + 1)\r\n                    .join('0');\r\n            }\r\n            return s.join(dec);\r\n        }\r\n\r\n        //Модалка продукта\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div\r\n                        className=\"blockProduct maxWidths\"\r\n                        style={{\"margin\":\"0\",\"textAlign\":\"left\"}}\r\n                    >\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Group\r\n                            id={'product_type_'+OPT.ProductInfo[0].type_info}\r\n                        >\r\n                            <Div style={{position:\"relative\"}}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">\r\n                                <span className=\"titleProductOne\">{escapeHtmlDecode(OPT.ProductInfo[0].title)}</span>\r\n                                <span className=\"redTextP\">\r\n                                    {getWeightProduct(OPT.ProductInfo[0].weight,OPT.ProductInfo[0].weight_type)}\r\n                                </span>\r\n                                <div className=\"clr\"></div>\r\n                            </div>\r\n\r\n\r\n                                <Div className=\"DescrProduct\">\r\n                                    {escapeHtmlDecode(OPT.ProductInfo[0].description)}\r\n                                    <div>\r\n                                    </div>\r\n                                    {OPT.ProductInfo[0].type_info != '' ?\r\n                                        <div className=\"WeightBlock\">\r\n                                            {OPT.ProductInfo[0].type_info}\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </Div>\r\n\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                            </Div>\r\n                        </Group>\r\n\r\n                        {OPT.ProductInfo[0].komboPoduct.length <= 0 ?\r\n                            \"\"\r\n                            :\r\n                            <Group\r\n                            title=\"В набор входят\"\r\n                            >\r\n                                {OPT.getKomboProductData(OPT.ProductInfo[0].komboPoduct,OPT.AllProduct)}\r\n                            </Group>\r\n                        }\r\n\r\n                        {OPT.getFeaturesBlock(OPT.ProductInfo[0].featuresProduct)}\r\n                        <div style={{clear:\"both\",height:\"60px\",width:\"100%\"}}></div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                        searchProduct={OPT.searchProduct}\r\n\r\n                        showModal={OPT.showModal.bind(this)}\r\n                        hideModals={OPT.hideModals.bind(this,null)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n            global.settingsFilterSearch.typeProduct = false;\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//hochuchoto.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38');\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//hochuchoto.ru/images/API_IMG/logo.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7(982) 000-89-89</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+79820008989\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <Cell\r\n                        className=\"BoxCellSearch\"\r\n                        asideContent={\r\n                            <Icon24Filter\r\n                                onClick={\r\n                                    ()=>{this.props.showModal('MODAL_Filter_Catalog');}\r\n                                }\r\n                            />}\r\n                    >\r\n                        <Search\r\n                            value={this.state.search}\r\n                            onChange={this.onChange}\r\n                            after={null}\r\n                        />\r\n                    </Cell>\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        searchProduct={this.state.search}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        AllProduct={this.state.products}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        getKomboProductData={this.getKomboProductData.bind(this)}\r\n                        getFeaturesBlock={this.getFeaturesBlock.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React from 'react';\r\nimport { Div, Search, Cell } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\nimport ym from 'react-yandex-metrika';\r\n\r\nimport axios from \"axios\";\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductDescription(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['description'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductType(Pr,DSr,ListIdProduct){\r\n            const retr = [];\r\n\r\n            ListIdProduct.forEach(function (oneProduct, keyId, array) {\r\n               if(testType(DSr, Pr[oneProduct][0]['modyficate'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n           }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testType(re,modyficate) {\r\n            var status = false;\r\n            if(modyficate.length <=0){\r\n                status = false;\r\n            }else{\r\n                modyficate.forEach(function(oneProduct, keyId, array){\r\n                    if(oneProduct.mod === re){\r\n                        status = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return status;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n            re = re.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n            str = str.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 3){\r\n                if(global.settingsFilterSearch.typeSearch === 0) {\r\n                    CatalogLists = SearchProductTitle(Pr, SearchText);\r\n                }else{\r\n                    CatalogLists = SearchProductDescription(Pr, SearchText);\r\n                }\r\n                try {\r\n                    if (global.Metrika.Markers[2].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[2].marker);\r\n                    }\r\n                }catch (e) {\r\n\r\n                }\r\n            }\r\n\r\n            if(global.settingsFilterSearch.typeProduct === false){}else{\r\n                CatalogLists = SearchProductType(Pr, global.settingsFilterSearch.typeProduct,CatalogLists);\r\n            }\r\n\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct\r\n                    key={'Products_'+keyId}\r\n                    product={Pr[oneProduct]}\r\n                    ClickProduct={ClickProductF.bind(this)}\r\n                    setCart={setCart.bind(this)}\r\n                    setProductModal={setProductModal.bind(this)}\r\n                    getButtonInCartProduct={getButtonInCartProduct.bind(this)}\r\n                />\r\n            );\r\n\r\n            if(ArrayPr.length <=0){\r\n               return false;\r\n            }else{\r\n                return ArrayPr;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                const resGetSets = <GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                    clrStatus={nameCategorys.clrStatus}\r\n                />;\r\n                if(resGetSets === false){\r\n\r\n                    return false;\r\n                }else{\r\n                    //console.log(resGetSets);\r\n                    return (resGetSets);\r\n                }\r\n\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n          // console.log('SearchState ',ArrayPr.SearchState );\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false || ArrayPr.SearchState === undefined){\r\n                return (\r\n                    <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                        <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                            {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0)}\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n\r\n                const ResPrVal = ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState);\r\n\r\n                if(ResPrVal === false){\r\n                   //console.log('Нет данных',ResPrVal);\r\n                    return false;\r\n                }else{\r\n                    return (\r\n                        <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                            <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                                {ResPrVal}\r\n                            </Div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://hochuchoto.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        if(this.props.clrStatus === undefined){\r\n            var clrStatus = true;\r\n        }else{\r\n            var clrStatus = this.props.clrStatus;\r\n        }\r\n\r\n        const ResultCategoryReturn = <ShowProductCategory\r\n            SearchState={this.props.searchProduct}\r\n            productsLists={this.props.productsLists}\r\n            nameCategorys={this.props.nameCategory}\r\n            idCategory={this.props.idCategorys}\r\n            ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n            setCart={this.props.setCart.bind(this)}\r\n            setProductModal={this.props.setProductModal.bind(this)}\r\n            getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            clrStatus={clrStatus}\r\n        />;\r\n\r\n        if(ResultCategoryReturn === false){\r\n            return (\"\");\r\n        }else{\r\n            //console.log(ResultCategoryReturn);\r\n            return (\r\n                ResultCategoryReturn\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://hochuchoto.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://hochuchoto.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#f25900\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#f25900\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#f25900\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#f25900\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#f25900',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://hochuchoto.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://hochuchoto.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://hochuchoto.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://hochuchoto.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"var(--accent)\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://hochuchoto.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\n// import SberbankIPay from 'react-sberbank-ipay';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно бонусов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> бонусов</Cell>);\r\n        }\r\n    }\r\n\r\n\r\n    getPageSberbank(){\r\n        axios('https://hochuchoto.ru/api/testPageSBRPay&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    // console.log('Ответ сервера ',data);\r\n                    console.log(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано бонусов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    {/*<Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"*/}\r\n                                    {/*       defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}*/}\r\n                                    {/*       onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>*/}\r\n                                    <Radio name=\"typePayments\" value='0' description=\"Оплата банковской картой, онлайн\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 0 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:0})}}>Онлайн</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n\r\n                                        {/*<Button*/}\r\n                                        {/*    onClick={*/}\r\n                                        {/*        ()=>{console.log('Создаем заказ и отправляем на онлайн оплату!');*/}\r\n                                        {/*        // this.getPageSberbank();*/}\r\n                                        {/*            this.props.showModal('MODAL_PAYMENT_FORM');*/}\r\n\r\n                                        {/*          setTimeout(function(){*/}\r\n                                        {/*              var win = document.getElementById(\"framePayments\");*/}\r\n                                        {/*              console.log(document.getElementById(\"framePayments\").contentWindow.postMessage(\"53122\", \"*\"));*/}\r\n                                        {/*          },500);*/}\r\n                                        {/*        }*/}\r\n                                        {/*    }*/}\r\n                                        {/*>*/}\r\n                                        {/*    Do payment!*/}\r\n                                        {/*</Button>*/}\r\n\r\n                                        {/*<SberbankIPay.Preloader*/}\r\n                                        {/*    apiToken=\"<your_token>\"*/}\r\n                                        {/*    language=\"ru\"*/}\r\n                                        {/*    classNamePreloader=\"payment-preloader\"*/}\r\n                                        {/*/>*/}\r\n\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                                        sumItog={this.getSumCartItogo()}\r\n\r\n                                                        showModalPayment={this.props.showModal.bind(this)}\r\n\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://hochuchoto.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        if(data.infoNewOrder.typePayment == '0'){\r\n                            this.props.showModalPayment('MODAL_PAYMENT_FORM');\r\n                            setTimeout(function(){\r\n                                var win = document.getElementById(\"framePayments\");\r\n                                console.log(document.getElementById(\"framePayments\").contentWindow.postMessage({\"idOrder\":data.infoNewOrder.idNewOrder,\"summaPayment\":data.infoNewOrder.sumPaymentItog}, \"*\"));\r\n                            },500);\r\n                        }else{\r\n                            this.props.getPageOkOrderSet({newOrderStats:true});\r\n                            this.props.setOkNewOrderView();\r\n                        }\r\n\r\n                        try{\r\n                            if(global.Metrika.Markers[4].active == '1') {\r\n                                ym('reachGoal', global.Metrika.Markers[4].marker);\r\n                            }\r\n                        }catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\"\r\n                    onClick={()=>{\r\n                        this.setDataServer()\r\n                    }}\r\n                    className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Бонусы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group style={{display:\"none\"}}>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href=\"//vk.com/im?sel=-199028418\" target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\nimport { YMInitializer } from 'react-yandex-metrika';\n\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n        <App />\n    , document.getElementById('root'));\n\nReactDOM.render(\n    <YMInitializer\n        accounts={[56971987]}\n        options = { {\n            clickmap:true,\n            trackLinks:true,\n            accurateTrackBounce:true,\n            webvisor:true\n        } }\n        version = \"2\"\n    />\n    , document.getElementById('Metrickss'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://hochuchoto.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://hochuchoto.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#f25900\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#f25900\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';\r\n\r\nglobal.settingsFilterSearch = {\r\n    typeSearch:0,\r\n    typeProduct: false\r\n}\r\n\r\nglobal.ii =0;\r\n\r\nglobal.Metrika = {}","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n"],"sourceRoot":""}